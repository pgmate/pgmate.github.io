"use strict";(self.webpackChunkpgmate=self.webpackChunkpgmate||[]).push([[470],{4767:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});var n=s(1821),i=s(4848),a=s(8453);const r={slug:"updates-week5",title:"Product Updates - Week 5",authors:["marcopeg"],tags:["pgmate","demo"]},o=void 0,d={authorsImageUrls:[void 0]},l=[{value:"\ud83c\udf89 New Features",id:"-new-features",level:2},{value:"Create new Database / Schema",id:"create-new-database--schema",level:3},{value:"Table&#39;s Upstream/Downstram Chart",id:"tables-upstreamdownstram-chart",level:3},{value:"Edit in SQL Studio",id:"edit-in-sql-studio",level:3},{value:"Support Instagres Databases",id:"support-instagres-databases",level:3},{value:"\ud83d\udc69\u200d\ud83d\udcbb UX Improvements",id:"-ux-improvements",level:2},{value:"Resizeable Side menu",id:"resizeable-side-menu",level:3},{value:"Arc Inspired Menu",id:"arc-inspired-menu",level:3},{value:"Dense Grid Layout",id:"dense-grid-layout",level:3},{value:"\ud83d\udea7 COMING UP NEXT",id:"-coming-up-next",level:2},{value:"Keyboard Shortcuts",id:"keyboard-shortcuts",level:3},{value:"Home Screen Articles",id:"home-screen-articles",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Create new database and schema"}),"\n",(0,i.jsx)(t.li,{children:"Tables dependency tree"}),"\n",(0,i.jsx)(t.li,{children:"Edit in SQL studio shortcut"}),"\n",(0,i.jsx)(t.li,{children:"Support Instagres.com"}),"\n",(0,i.jsxs)(t.li,{children:["UI niceties","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Resizeable menu"}),"\n",(0,i.jsx)(t.li,{children:"Arc-inspired main menu"}),"\n",(0,i.jsx)(t.li,{children:"Dense view on data-grids"}),"\n",(0,i.jsx)(t.li,{children:"Fixed scroll & sticky page titles"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"-new-features",children:"\ud83c\udf89 New Features"}),"\n",(0,i.jsx)(t.h3,{id:"create-new-database--schema",children:"Create new Database / Schema"}),"\n",(0,i.jsx)(t.p,{children:"It's a little feature, but it could be useful to quickly create a new DB or Schema without having to hit on SQL code."}),"\n",(0,i.jsxs)(t.p,{children:["I've taken care of adding an ",(0,i.jsx)(t.strong,{children:"optional description field"})," that materializes as a ",(0,i.jsx)(t.code,{children:"COMMENT ON"})," db/schema."]}),"\n",(0,i.jsxs)(t.p,{children:["\ud83d\udc49 ",(0,i.jsx)(t.a,{href:"https://marcopeg.com/context-fuels-language-models/",children:"Adding comments to your database object will make Copilot much more efficient"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Create new database and schema",src:s(3343).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsx)(t.h3,{id:"tables-upstreamdownstram-chart",children:"Table's Upstream/Downstram Chart"}),"\n",(0,i.jsxs)(t.p,{children:["This is the first step into visualizing the database relations. So far, PGMate uses ",(0,i.jsx)(t.em,{children:"foreign keys"})," metadata, as long with other information from ",(0,i.jsx)(t.code,{children:"pg_depend"})," about indexes and series."]}),"\n",(0,i.jsxs)(t.p,{children:["It is already possible to click on the nodes to navigate the database, and in the future I plan do add ",(0,i.jsx)(t.em,{children:"AI-based analysis"})," to suggest semantic relations that are not described as part of the schema."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Table&#39;s Upstream/downswtram charts - PGMate",src:s(6057).A+"",width:"1842",height:"1058"})}),"\n",(0,i.jsx)(t.h3,{id:"edit-in-sql-studio",children:"Edit in SQL Studio"}),"\n",(0,i.jsx)(t.p,{children:"One of the goals of PGMate is to expose the generated SQL everywhere in the user interface (\ud83d\udea7) so that the user can learn something from it. If anything, it vastly uses the Postgres' metadata schemas to do its job."}),"\n",(0,i.jsx)(t.p,{children:"But there are many situations in which it would be nice to take the generated code and tweak it to get the results you want. Well, now you can."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Edit in SQL Studio - PGMate",src:s(3084).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsx)(t.h3,{id:"support-instagres-databases",children:"Support Instagres Databases"}),"\n",(0,i.jsxs)(t.p,{children:["I've recently came across ",(0,i.jsx)(t.a,{href:"https://www.instagres.com/",children:"Instagres"}),", a service from ",(0,i.jsx)(t.a,{href:"https://neon.tech",children:"Neon"})," that lets you spin up a ",(0,i.jsx)(t.strong,{children:"temporary Postgres db"})," in seconds."]}),"\n",(0,i.jsx)(t.p,{children:"I tried it, only to figure our that PGMate's SSL options weren't enough... So now it's fixed and you can pass any of the querystring supported options."}),"\n",(0,i.jsxs)(t.p,{children:["\ud83d\udc49 Try to ",(0,i.jsx)(t.a,{href:"https://www.instagres.com/new",children:"CREATE an Instagres"})," db and navigate it with PGMate!"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Support Instagres",src:s(4148).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsx)(t.h2,{id:"-ux-improvements",children:"\ud83d\udc69\u200d\ud83d\udcbb UX Improvements"}),"\n",(0,i.jsx)(t.h3,{id:"resizeable-side-menu",children:"Resizeable Side menu"}),"\n",(0,i.jsx)(t.p,{children:"Ok, not really a game changer, but I was bothered by other Apps that could do this."}),"\n",(0,i.jsx)(t.p,{children:"And yes, thanks for asking, I'm considering a collapsible menu but I'm not yet sure about its UX yet."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Resizeable Side Menu - PGMate",src:s(1478).A+"",width:"640",height:"480"})}),"\n",(0,i.jsx)(t.h3,{id:"arc-inspired-menu",children:"Arc Inspired Menu"}),"\n",(0,i.jsxs)(t.p,{children:["I love the ",(0,i.jsx)(t.a,{href:"https://arc.net/",children:"Arc browser"}),", especially how they designed the pinned links in the sidebar."]}),"\n",(0,i.jsx)(t.p,{children:"This is the first step into a similar feature. It's only UI for some static links right now, but in the future the idea is to host drag'n'droppable bookmarks to tables, functions, snippets and whatsoever."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Arc Inspired Menu - PGMate",src:s(3752).A+"",width:"772",height:"492"})}),"\n",(0,i.jsx)(t.h3,{id:"dense-grid-layout",children:"Dense Grid Layout"}),"\n",(0,i.jsxs)(t.p,{children:["A colleague made a little remark about content density in the results grid... and this turned out to be just a low-hanging fruit (",(0,i.jsx)(t.code,{children:"density=compact"})," in MUI's x-grid)."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Dense Grid Layout - PGMate",src:s(8328).A+"",width:"1898",height:"1143"})}),"\n",(0,i.jsx)(t.h2,{id:"-coming-up-next",children:"\ud83d\udea7 COMING UP NEXT"}),"\n",(0,i.jsx)(t.h3,{id:"keyboard-shortcuts",children:"Keyboard Shortcuts"}),"\n",(0,i.jsxs)(t.p,{children:["I plan to work on ",(0,i.jsx)(t.strong,{children:"keyboard shortcuts"})," to navigate the database."]}),"\n",(0,i.jsx)(t.p,{children:"Focusing on high-level features:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Home"}),"\n",(0,i.jsx)(t.li,{children:"Copilot"}),"\n",(0,i.jsx)(t.li,{children:"SQL Studio"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Jumping to different layers:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"connection"}),"\n",(0,i.jsx)(t.li,{children:"database"}),"\n",(0,i.jsx)(t.li,{children:"schema"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Moving across table's view:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"data"}),"\n",(0,i.jsx)(t.li,{children:"info"}),"\n",(0,i.jsx)(t.li,{children:"structure"}),"\n",(0,i.jsx)(t.li,{children:"DDL"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"In the end, I envision to bring into PGMate something similar to VSCode's Command Palette, which I consider one of the best approach to a hybrid or aided keyboard shortcuts management."}),"\n",(0,i.jsx)(t.h3,{id:"home-screen-articles",children:"Home Screen Articles"}),"\n",(0,i.jsx)(t.p,{children:"As you know, one of the goals of PGMate is to blend a Postgres client with a learning tool or learning experience."}),"\n",(0,i.jsxs)(t.p,{children:["The first micro-step was the ",(0,i.jsx)(t.strong,{children:"Postgres Facts"})," feature:"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Postgres Facts - PGMate",src:s(557).A+"",width:"1280",height:"720"})}),"\n",(0,i.jsxs)(t.p,{children:["The next step is to curate a blog of open source contents from external sources and inject it into PGMate's home screen. This feature is much inspired by ",(0,i.jsx)(t.a,{href:"https://ghost.org/",children:"GhostJS"})," admin panel, and it will be a blend of:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"product updates (well, this kind of posts)"}),"\n",(0,i.jsx)(t.li,{children:"Youtube videos"}),"\n",(0,i.jsx)(t.li,{children:"Interesting Reddit conversations"}),"\n",(0,i.jsx)(t.li,{children:"General articles"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The idea is to use ",(0,i.jsx)(t.a,{href:"https://github.com/pgmate/contents/tree/main",children:"PGMate's content repo"})," to store index files that will be edited and enriched by the community with public PRs. A background function will pull new content into some internal tables that are then used to serve it in an internal category based wall of content."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3752:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/arc-inspired-menu-333871dde8908e1e4e7f200e55dd8783.png"},3343:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/create-db-schema-d73ce7e50a37e2e9bcc1d395e4b40ec6.gif"},8328:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/dense-grid-layout-11188ad1676973dd6247958ab1ea769d.png"},3084:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/edit-in-sql-studio-383e41f040d257a379b490a84ece350d.gif"},4148:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/instagres-2d59df9782c2c05537929f9c01713383.gif"},557:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/postgres-facts-f9da4baa8ff39bf234e414a944b4eddb.gif"},1478:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/resize-menu-fe71e1ef7cc99bbb6511517ef11be9e3.gif"},6057:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/upstream-downstream-9f1acc2c182d1f57f8fb61b7251557a1.png"},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(6540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}},1821:e=>{e.exports=JSON.parse('{"permalink":"/blog/updates-week5","editUrl":"https://github.com/pgmate/pgmate.github.io/tree/main/blog/2025-02-01-updates.mdx","source":"@site/blog/2025-02-01-updates.mdx","title":"Product Updates - Week 5","description":"- Create new database and schema","date":"2025-02-01T00:00:00.000Z","tags":[{"inline":false,"label":"PGMate","permalink":"/blog/tags/pgmate","description":"PGMate Product News"},{"inline":false,"label":"Demo","permalink":"/blog/tags/demo","description":"Demos of the product"}],"readingTime":3.505,"hasTruncateMarker":true,"authors":[{"name":"Marco Pegoraro","title":"founder","url":"https://marcopeg.com","page":{"permalink":"/blog/authors/marcopeg"},"socials":{"x":"https://x.com/thepeg","linkedin":"https://www.linkedin.com/in/marcopeg/","github":"https://github.com/marcopeg","newsletter":"https://marcopeg.com"},"imageURL":"https://marcopeg.com/content/images/2021/11/image-50.png","key":"marcopeg"}],"frontMatter":{"slug":"updates-week5","title":"Product Updates - Week 5","authors":["marcopeg"],"tags":["pgmate","demo"]},"unlisted":false,"prevItem":{"title":"Introducing Community Articles","permalink":"/blog/updates-week7"},"nextItem":{"title":"PGMate Copilot POC","permalink":"/blog/copilot-poc"}}')}}]);